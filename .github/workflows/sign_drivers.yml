name: Sign Windows drivers

on:
  workflow_dispatch:
      inputs:
        driver_version:
          description: Windows driver version (e.g. 1.0.0.0)
          type: string
          required: true
        driver_directory:
          description: Driver directory in drivers/ (e.g. wrover_b_driver)
          type: string
          required: true
        catalog_file:
          description: Driver catalog file (e.g. wrover_b_driver.cat)
          type: string
          required: true
        display_name:
          description: Driver display name - for asset, tag, ... (e.g. WROVER-B)
          type: string
          required: true

jobs:
    wrover-driver:
        name: Sign driver
        runs-on: windows-latest
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Sign wrover driver
              env:
                CERTIFICATE: ${{ secrets.CERTIFICATE }}
                CERTIFICATE_PASSWORD: ${{ secrets.CERTIFICATE_PASSWORD }}

              shell: pwsh
              run: .\ci\Sign-File.ps1 -Path .\drivers\${{ inputs.driver_directory }}\${{ inputs.catalog_file }}

            - name: Create GitHub Release
              id: create_release
              uses: actions/create-release@v1
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                tag_name: ${{ inputs.display_name }}_v${{ inputs.driver_version }}
                release_name: ${{ inputs.display_name }} driver ${{ inputs.driver_version }}
                draft: true
                prerelease: false

            - name: Compress files to ZIP
              run: .\ci\Bundle-Files.ps1 -Path ./drivers/${{ inputs.driver_directory }}/* -DriverName ${{ inputs.driver_directory }}
            
            - name: Upload Release Asset To Github
              id: upload-release-asset
              uses: actions/upload-release-asset@v1
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                upload_url: ${{ steps.create_release.outputs.upload_url }}
                asset_path: .\drivers\${{ inputs.driver_directory }}.zip
                asset_name: ${{ inputs.display_name }}-v${{ inputs.driver_version }}.zip
                asset_content_type: application/octet-stream
